name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    name: 'Lint :: Ansible'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Run ansible-lint
        uses: ansible/ansible-lint-action@v6

  test-sanity:
    name: 'Test :: Sanity'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ansible_collections/netcloud/ncae
      
      - name: Run ansible-test sanity
        run: ansible-test sanity --docker -v
        working-directory: ansible_collections/netcloud/ncae

  test-unit:
    name: 'Test :: Unit'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ansible_collections/netcloud/ncae
      
      - name: Run ansible-test units
        run: ansible-test units --docker -v
        working-directory: ansible_collections/netcloud/ncae

  test-integration:
    name: 'Test :: Integration'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ansible_collections/netcloud/ncae
      
      - name: Run ansible-test integration
        run: ansible-test integration --docker -v
        working-directory: ansible_collections/netcloud/ncae

  galaxy-build:
    name: 'Galaxy :: Build'
    runs-on: ubuntu-latest
    needs:
      - lint
      - test-sanity
      - test-unit
      - test-integration
    outputs:
      version: ${{ env.GALAXY_VERSION }}
    steps:
      - uses: actions/checkout@v3

      - name: Determine collection version
        run: echo "GALAXY_VERSION=$(grep version galaxy.yml | cut -d' ' -sf 2)" >> $GITHUB_ENV

      - name: Build collection artifact
        run: ansible-galaxy collection build

      - name: Upload collection artifact
        uses: actions/upload-artifact@v3
        with:
          name: ansible-collection
          path: netcloud-ncae-${{ env.GALAXY_VERSION }}.tar.gz
          retention-days: 1
          if-no-files-found: error

  galaxy-publish:
    name: 'Galaxy :: Publish'
    runs-on: ubuntu-latest
    needs: galaxy-build
    if: startsWith(github.event.ref, 'refs/tags/v')
    env:
      GALAXY_VERSION: ${{ needs.galaxy-build.outputs.version }}
    steps:
      - name: Fail on version mismatch between Git and Galaxy metadata
        run: |-
          if [[ "${GITHUB_REF_NAME}" != "v${GALAXY_VERSION}" ]]; then
            echo "Unexpected version mismatch between Git tag and Galaxy metadata!" >&2
            echo "> Git Tag: ${GITHUB_REF_NAME}" >&2
            echo "> Galaxy Metadata: v${GALAXY_VERSION}" >&2
            echo "Please ensure galaxy.yml has same version as Git tag and try again." >&2
            exit 1
          fi

      - name: Download collection artifact
        uses: actions/download-artifact@v3
        with:
          name: ansible-collection

      - name: Publish collection on Ansible Galaxy
        run: ansible-galaxy collection publish --token "${GALAXY_API_KEY}" "netcloud-ncae-${GALAXY_VERSION}.tar.gz"
        env:
          GALAXY_API_KEY: ${{ secrets.GALAXY_API_KEY }}

  docs-build:
    name: 'Docs :: Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: ansible_collections/netcloud/ncae

      - name: Install antsibull-docs
        run: pip install antsibull-docs

      - name: Generate Sphinx root for collection docs
        run: mkdir dest && antsibull-docs sphinx-init --use-current --dest-dir dest netcloud.ncae
        working-directory: ansible_collections/netcloud/ncae

      - name: Install dependencies for Sphinx built
        run: pip install -r requirements.txt
        working-directory: ansible_collections/netcloud/ncae/dest

      - name: Build documentation using Sphinx
        run: ./build.sh
        working-directory: ansible_collections/netcloud/ncae/dest
        env:
          ANSIBLE_COLLECTIONS_PATHS: ${GITHUB_WORKSPACE}/ansible_collections

      - name: Build GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ansible_collections/netcloud/ncae/dest/build/html

  docs-deploy:
    name: 'Docs :: Deploy'
    runs-on: ubuntu-latest
    needs:
      - docs-build
    permissions:
      id-token: write
      pages: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    # Disabled until publication of repository due to lack of GH Pages support
    # if: startsWith(github.event.ref, 'refs/tags/v')
    if: ${{ false }}
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v1
